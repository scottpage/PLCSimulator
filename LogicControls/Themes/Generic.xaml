<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ScottPage.Programming.LogicControls">

    <Style x:Key="BaseStyle"
           TargetType="{x:Type FrameworkElement}">
        <Setter Property="IsHitTestVisible"
                Value="True" />
    </Style>

    <Style x:Key="ShapeStateColorStyle"
           TargetType="{x:Type Shape}"
           BasedOn="{StaticResource BaseStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Discrete}}}"
                         Value="True">
                <Setter Property="Stroke"
                        Value="LimeGreen" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Discrete}}}"
                         Value="False">
                <Setter Property="Stroke"
                        Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderMouseOverStyle"
           TargetType="{x:Type Border}"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="Background"
                Value="Transparent" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="False" />
                    <Condition Binding="{Binding IsSelected, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush"
                            Value="Gray" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="False" />
                    <Condition Binding="{Binding IsSelected, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush"
                            Value="Blue" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LogicControl}}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush"
                            Value="LightBlue" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LogicControlDefaultStyle"
           TargetType="{x:Type local:LogicControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LogicControl}">
                    <Border Style="{StaticResource BorderMouseOverStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Discrete}"
           x:Key="DiscreteDefaultStyle"
           BasedOn="{StaticResource LogicControlDefaultStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Discrete}">
                    <Border Style="{StaticResource BorderMouseOverStyle}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Wire}"
           BasedOn="{StaticResource DiscreteDefaultStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Wire}">
                    <Grid>
                        <Path Data="M0,0.5 L1,0.5"
                              Style="{Binding Mode=OneWay, Source={StaticResource ShapeStateColorStyle}}"
                              Stretch="Fill"
                              Margin="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Contact}"
           BasedOn="{StaticResource DiscreteDefaultStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Contact}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.25*" />
                            <RowDefinition Height="0.50*" />
                            <RowDefinition Height="0.25*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.1*" />
                            <ColumnDefinition Width="0.15*" />
                            <ColumnDefinition Width="0.50*" />
                            <ColumnDefinition Width="0.15*" />
                            <ColumnDefinition Width="0.1*" />
                        </Grid.ColumnDefinitions>
                        <Border Style="{StaticResource BorderMouseOverStyle}"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="5" />

                        <Viewbox Grid.Column="0"
                                 Grid.ColumnSpan="5"
                                 Grid.Row="0">
                            <TextBlock TextAlignment="Center"
                                       Text="{TemplateBinding TagName}" />
                        </Viewbox>

                        <Path Stretch="Fill"
                              Grid.Row="1"
                              Grid.Column="0"
                              Grid.ColumnSpan="2"
                              Data="M0,0.5 L1,0.5"
                              Style="{StaticResource ShapeStateColorStyle}" />

                        <Path Stretch="Fill"
                              Grid.Row="1"
                              Grid.Column="2"
                              Data="M0,0 L0,1 M1,0 L1,1"
                              Style="{StaticResource ShapeStateColorStyle}" />

                        <Path Stretch="Fill"
                              Grid.Row="1"
                              Grid.Column="3"
                              Grid.ColumnSpan="2"
                              Data="M0,0.5 L1,0.5"
                              Style="{StaticResource ShapeStateColorStyle}" />

                        <Path Stretch="Fill"
                              Grid.Row="1"
                              Grid.Column="1"
                              Grid.ColumnSpan="3"
                              Data="M0,1 L1,0">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}"
                                       BasedOn="{StaticResource ShapeStateColorStyle}">
                                    <Setter Property="Visibility"
                                            Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsNormallyClosed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Contact}}}"
                                                     Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Coil}"
           BasedOn="{StaticResource DiscreteDefaultStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Coil}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.35*" />
                            <ColumnDefinition Width="0.30*" />
                            <ColumnDefinition Width="0.35*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.25*" />
                            <RowDefinition Height="0.50*" />
                            <RowDefinition Height="0.25*" />
                        </Grid.RowDefinitions>
                        <Border Style="{StaticResource BorderMouseOverStyle}"
                                Grid.ColumnSpan="3"
                                Grid.RowSpan="3" />
                        <Viewbox Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Grid.Row="0">
                            <TextBlock Text="{TemplateBinding TagName}"
                                       TextAlignment="Center" />
                        </Viewbox>
                        <Path Grid.Column="0"
                              StrokeThickness="1"
                              Grid.Row="1"
                              Stretch="Fill"
                              Data="M0,0.5 L1,0.5"
                              Style="{Binding Mode=OneWay, Source={StaticResource ShapeStateColorStyle}}" />

                        <Ellipse StrokeThickness="1"
                                 Grid.Column="1"
                                 Grid.Row="1"
                                 Style="{Binding Mode=OneWay, Source={StaticResource ShapeStateColorStyle}}" />

                        <Path Grid.Column="2"
                              Grid.Row="1"
                              StrokeThickness="1"
                              Stretch="Fill"
                              Data="M0,0.5 L1,0.5"
                              Style="{Binding Mode=OneWay, Source={StaticResource ShapeStateColorStyle}}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Branch}"
           BasedOn="{StaticResource DiscreteDefaultStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Branch}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.5*" />
                            <RowDefinition Height="0.5*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*" />
                            <ColumnDefinition Width="0.5*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="2"
                                Grid.ColumnSpan="2" />
                        <Path Stretch="Fill"
                              Margin="0">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}"
                                       BasedOn="{StaticResource ShapeStateColorStyle}">
                                    <Setter Property="Data"
                                            Value="M0,0.5 L1,0.5 M0.5,0.5 L0.5,1" />
                                    <Setter Property="Grid.Row"
                                            Value="1" />
                                    <Setter Property="Grid.ColumnSpan"
                                            Value="2" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BranchType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Branch}}}"
                                                     Value="ThroughUp">
                                            <DataTrigger.Setters>
                                                <Setter Property="Data"
                                                        Value="M0,0.5 L1,0.5 M0.5,0.5 L0.5,0" />
                                                <Setter Property="Grid.Row"
                                                        Value="0" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding BranchType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Branch}}}"
                                                     Value="LeftDown">
                                            <DataTrigger.Setters>
                                                <Setter Property="Data"
                                                        Value="M0,0.5 L0.5,0.5 M0.5,0.5 L0.5,1" />
                                                <Setter Property="Grid.Row"
                                                        Value="1" />
                                                <Setter Property="Grid.ColumnSpan"
                                                        Value="1" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding BranchType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Branch}}}"
                                                     Value="LeftUp">
                                            <DataTrigger.Setters>
                                                <Setter Property="Data"
                                                        Value="M0,0.5 L0.5,0.5 M0.5,0.5 L0.5,0" />
                                                <Setter Property="Grid.Row"
                                                        Value="0" />
                                                <Setter Property="Grid.ColumnSpan"
                                                        Value="1" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EmptyCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EmptyCell}">
                    <Grid>
                        <Border />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Rung}"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Rung}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Ladder}"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Ladder}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Testing -->

    <Style TargetType="{x:Type local:TestControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TestControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Canvas>

                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
